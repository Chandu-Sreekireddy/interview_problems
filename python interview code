import json

def lambda_handler(event, context):
    
    # TODO implement
    print(json.dumps(event))
    response=None
    if event.get("type")=="prime":
        response=Prime(event.get("number"))
    if event.get("type")=="fibonnacci":  
        response=Fibonnacci(event.get("number"))
    
    if event.get("type")=="factorial":  
        response=Factorial(event.get("number"))        
             
    return {
        'statusCode': 200,
        'body': json.dumps(response)
    }
def Prime(number):
    flag=True
    print("inside_number",number)
    prime_number=int(number)
    for i in range(2,prime_number-1):
        if prime_number %i ==0 :
            flag=False
            break
        
        
    if flag :
        return "given number is prime number"
    else:
        return "given number is not a prime number"
        
        
def Fibonnacci(number):
    n1,n2=0,1 
    count=0
    fibonacci_number=int(number)
    while count < fibonacci_number:
        nterms=n1+n2
        print(n1)
        n1=n2
        n2=nterms
        count+=1
        
        
def Factorial(number):
    num=int(number)
    factor_assume=1
    
    for i in range(1,num + 1):
        factorial_number = factor_assume*i
        
    print(factorial_number)  
        
        
    
        
